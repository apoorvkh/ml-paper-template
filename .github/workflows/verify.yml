# verify.yml

on: 
  workflow_call:
    inputs:
      branch-name:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:    
      # 0. Chechout to main
      - uses: actions/checkout@v4
        with:
          ref: main
      # 1. Checkout to the repository with the determined branch name
      - name: Checkout repository
        run: |
          mkdir ${{ inputs.branch-name }}
          cd ${{ inputs.branch-name }}
          git clone -b ${{ inputs.branch-name }} https://github.com/apoorvkh/ml-paper-template.git        
          
      - name: check-branch
        run: |
          cd conf/cvpr2024/ml-paper-template
          ls
      
      # 2. Read the YML file preparing the input for the config_path and the folder_path
      - name: read-yaml-file
        uses: pietrobolcato/action-read-yaml@1.0.0
        id: read_action_js
        with:
          config: ${{ github.workspace }}/${{ inputs.branch-name }}/ml-paper-template/.github/info.yaml

      # 3.1 Deserializing the files : Tar version
      - name: Download and extract directory with tar
        if: ${{ endsWith(steps.read_action_js.outputs['config_path'], 'gz') }}
        run: |
          echo ${{ steps.read_action_js.outputs['config_path'] }}
          curl -L ${{ steps.read_action_js.outputs['config_path'] }} -o initial.tar.gz
          tar -xf initial.tar.gz
          rm -f initial.tar.gz
          mv ${{ steps.read_action_js.outputs['folder_path'] }} ${{ inputs.branch-name }}/CVPR-2024-main
      
      # 3.2 Deserializing the files : Zip version
      - name: Download and extract directory with zip
        if: ${{ endsWith(steps.read_action_js.outputs['config_path'], 'zip') }}
        run: |
          echo ${{ steps.read_action_js.outputs['config_path'] }}
          curl -L ${{ steps.read_action_js.outputs['config_path'] }} -o initial.zip
          unzip initial.zip
          rm -f initial.zip
          mv ${{ steps.read_action_js.outputs['folder_path'] }} ${{ inputs.branch-name }}/CVPR-2024-main

      # Problem : Having an issue in rendering the ml-paper-template
      # Cause : Right now it's a clone of the same repo but on main into the branch
      # Solution : Go back to main and copy all files of branch into the main

      # 4. Render the PDF based on the conference templates
      - name: Render PDF cvpr2024
        uses: hspaans/latexmk-action@v1
        with:
          format: pdf
          filename: -cd ./${{ inputs.branch-name }}/CVPR-2024-main/${{ steps.read_action_js.outputs['main_file'] }}.tex
      
      - name: check-result
        run: |
          ls
          cd conf/cvpr2024/ml-paper-template
          ls
      # 5. Hacky approach: Change the file name
      - name: Change the pdf name
        run: |
          mv ${{ inputs.branch-name }}/CVPR-2024-main/${{ steps.read_action_js.outputs['main_file'] }}.pdf original.pdf
          
      # 6. Render the PDF based on our templates with the same contents with the conference
      - name: Render PDF ml-paper
        uses: hspaans/latexmk-action@v1
        with:
          format: pdf
          filename: -cd ./ml-paper-template/main.tex

      # 7. Use the diff-pdf to find the difference between two papers
      - uses: nowsprinting/diff-pdf-action@v1
        with:
          file1: ml-paper-template/original.pdf
          file2: ml-paper-template/main.pdf
          options: --skip-identical --output-diff=diff.pdf --dpi=100
          suppress-diff-error: true
      
      # 8. Upload the difference between two papers                                                                 
      - name: Upload diff result
        uses: actions/upload-artifact@v4
        with:
          name: difference pdf
          path: diff.pdf


